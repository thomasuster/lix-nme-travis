language: objective-c

install:
  
  # lix
  - npm i haxeshim -g
  - npm i switchx -g
  - switchx install 3.4.4
  - npm i lix.pm -g
  
  # haxelib for hxcpp
  - cd ..
  - mkdir haxelib
  - haxelib setup haxelib
  - cd $TRAVIS_BUILD_DIR
  
  # libs
  - lix download
  
  # Build HXCPP
  - LIX_HXCPP=$(node cdFile.js haxe_libraries/hxcpp.hxml)
  - haxelib dev hxcpp $LIX_HXCPP
  - cd $LIX_HXCPP/tools/hxcpp
  - haxe compile.hxml
  - cd $LIX_HXCPP/tools/build
  - haxe compile.hxml
  - cd $LIX_HXCPP/project
  - neko build.n
  - cd $TRAVIS_BUILD_DIR
  
  # Build NME build tool
  - LIX_NME=$(node cdFile.js haxe_libraries/nme.hxml)
  - haxelib dev nme $LIX_NME
  - cd $TRAVIS_BUILD_DIR
  - LIX_FORMAT=$(node cdFile.js haxe_libraries/format.hxml)
  - haxelib dev format $LIX_FORMAT
  - cd $TRAVIS_BUILD_DIR
  - LIX_GM2D=$(node cdFile.js haxe_libraries/gm2d.hxml)
  - haxelib dev gm2d $LIX_GM2D
  - cd $LIX_NME/tools/nme
  - haxe compile.hxml
  - cd $TRAVIS_BUILD_DIR
  
  # Build NME platform
  - LIX_NME_TOOLKIT=$(node cdFile.js haxe_libraries/nme-toolkit.hxml)
  - haxelib dev nme-toolkit $LIX_NME_TOOLKIT
  - cd $LIX_NME/project
  - neko build.n
  - cd $LIX_NME/tools/nme
  - haxelib run nme setup
  - cd $TRAVIS_BUILD_DIR
   
script:
  - cd $LIX_NME/tools/nme
  - haxe test.hxml
  - neko bin/TestMain.n
  - cd $LIX_NME/tests
  - haxe -x RunAll
  - cd $LIX_NME/tests/haxe
  - haxe compile.hxml
  - bin/TestMain